name: CI
on: 
  pull_request:
  push:
    branches: master
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-go@v2
        with:
          go-version: '^1.16'
      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Install dependencies
        run: go mod download
      - name: Build
        run: make build
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-go@v2
        with:
          go-version: '^1.16'
      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Install dependencies
        run: go mod download
      - name: Unit tests
        run: make ut
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: GolangCI Lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: latest
  publish:
    name: Publish Docker image
    needs: [build, test, lint]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Log in
        uses: docker/login-action@v1
        with:
          registry: docker.pkg.github.com
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build container image
        if: github.ref == 'refs/heads/master' ||  github.ref == 'refs/heads/dev'
        run: |
          make docker && \
          docker tag raptor/registry docker.pkg.github.com/${{ github.repository }}/registry:${GITHUB_REF##*/}-${{ github.sha }} && \
          docker push docker.pkg.github.com/${{ github.repository }}/registry:${GITHUB_REF##*/}-${{ github.sha }}
  swagger:
    name: Swagger to Github Pages
    needs: [publish]
    runs-on: ubuntu-latest
    steps:
      - name: Generate Swagger UI
        uses: Legion2/swagger-ui-action@v1
        with:
          output: swagger-ui
          spec-file: docs/swagger.json
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: swagger-ui
